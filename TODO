! boat sequence not working
c! results are not the same as when using sift execs
c! the pgm is not written right, think of using netbm, or maybe the way the buffer is used
c* put in options for reading the correspondences so i dont have to redo it again
*use the fast matching method using random zero trees
* allow for motions betwen two images where the relation is homography and use this to create the dependency graph, see below item
* take all the interrelations and create a linear sequence of images where every image is connected to its closes neighbour , so \
the proximity is measures by the number of matches between two images, but then the problem arises that two images that are two similar \
might have small baseline and the motion model might not be good between them,\
 so its good to fit the F matrix and use the error as a measure of their closeness, converting a netgwork to a tree or sequence
*maybe i should clip the number of sift points to a max of 1000 per image, any more is useless and it would be much faster to first find the F matrix from the first 1000 and
 then increase the number of matches via guided matching with correlation, this can be done by first using canny to edge detect the images then find all the matches with correlatio
 then i can use my interpolation technique to increase the number of matches around edges (the same idea in my old paper with boof)
 * how come for homography i end up actually fitting a correct fundamental matrix, shouldnt it be degenerate? the weird thing is that the number of points that work are small, so if i have 5000 matches i find 100 inliers, so somehow i think maybe the code finds a set of points who conform to a findamental matrix, later i haver to check for this because if the motion model is a homography even though two images might have tons of correspondences the image set is useless for depth resolution (i think)
_____________________________________________________________________________
c! feature pruning, debug it to see if it actually works
c! show bad matches in red
c! write down features per image so that the tracking matrix makes sense, otherwise the indices point to nothing
! write down the header for the track text file
!check memory leaks with valgrind
c! i get negative errors in the matches file
c! in teh matches file some points have zero error but they seem to be outliers
!match two images should return the number of inliers found and if such is small (like zero) the two images should be decoupled
____________________________________________________________________________________
- prune out the pairwise matches using the fundamental Matrix
* can we find trifocal tensor rather than f matrix?
* build a dependency graph where every image is related to its closest neighbour and process them in a pipeline as such instead of processing all things at the same timer_t
of course inintially everything will be processed together but later we will change this and show that it can improve performance


__________________________________________________________________________________________________________________________________________________
-do some testing on your results
-the next thing to do is to add in the feature track class to the right file and also to create a pairwise image relation that contains the geometry and then calculate that geometry
-from now on use this text file
